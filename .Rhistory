library(ggplot2)
library(reshape)
library(scales)
library(plotrix)
install.packages(c("reshape", "plotrix"))
library(ggplot2)
library(reshape)
library(scales)
library(plotrix)
entries <- subwaydata_fil %>%
select(station, linename,date.time, time, day_of_week,entries.delta, entries_per_timediff) %>%
mutate(type = "entry")
entries <- dplyr::rename(entries, entries_exits_rate = entries_per_timediff)
entries <- dplyr::rename(entries, entries_exits = entries.delta)
# exits dataframee
exits <- subwaydata_fil %>%
select(station, linename,date.time, time, day_of_week, exits.delta, exits_per_timediff) %>%
mutate(type = "exit")
exits <- dplyr::rename(exits, entries_exits_rate = exits_per_timediff)
exits <- dplyr::rename(exits, entries_exits = exits.delta)
# bind dataframes
subway_facet <- data.frame()
subway_facet <- rbind(entries,exits)
subway_facet <- as.data.frame(subway_facet)
subway_facet$entries_exits_rate[is.infinite(subway_facet$entries_exits_rate)] <- 0
##########################################
# total entries per day dataframe
daily_entries <- tapply(subwaydata$entries.delta, subwaydata$date, FUN=sum)
# total exits per day dataframe
daily_exits <- tapply(subwaydata$num_exits,subwaydata$date,FUN=sum)
##############################################
# plots
##############################################
##############################################
# Lexington Ave
##############################################
lexave_subwaydata <- subset(subwaydata_fil, station == "LEXINGTON AVE")
# plot
ggplot(data=lexave_subwaydata, aes(x=time,
y=entries_exits_rate,
group=type,
colour=type)) +
ggtitle("Lexington Ave - FNQR456 ") +
xlab("Time of Day") +
ylab("No. Entries & Exits")+
geom_smooth() +
facet_wrap(~ day_of_week)
######################################
# 42 St-Times Sq
######################################
ts_subwaydata <- subset(subway_facet, station == "42 ST-TIMES SQ")
# plot
ggplot(data=ts_subwaydata, aes(x=time,
y=entries_exits_rate,
group=type,
colour=type)) +
ggtitle("42-st Times Square") +
xlab("Time of Day") +
ylab("No. Entries & Exits")+
geom_smooth() +
facet_wrap(~ day_of_week)
######################################
# Westchest Sq
######################################
ws_subwaydata <- subset(subway_facet, station == "WESTCHESTER SQ")
# Mean Entry and Exit Rates vs. Time
ggplot(data=ws_subwaydata, aes(x=time,
y=entries_exits_rate,
group=type,
colour=type)) +
ggtitle("Westchester Square") +
xlab("Time of Day") +
ylab("No. Entries & Exits")+
geom_smooth() +
facet_wrap(~ day_of_week)
# Rate of people entering/exitting
mean(subwaydata_fil$entries.delta) / mean(subwaydata_fil$exits.delta) # percent of people
##############################
# total exits vs. total time
##############################
t <- subwaydata_fil
entries <- subwaydata_fil %>%
select(station, linename,date.time, time, day_of_week,entries.delta, entries_per_timediff) %>%
mutate(type = "entry")
entries <- dplyr::rename(entries, entries_exits_rate = entries_per_timediff)
entries <- dplyr::rename(entries, entries_exits = entries.delta)
# exits dataframee
exits <- subwaydata_fil %>%
select(station, linename,date.time, time, day_of_week, exits.delta, exits_per_timediff) %>%
mutate(type = "exit")
exits <- dplyr::rename(exits, entries_exits_rate = exits_per_timediff)
exits <- dplyr::rename(exits, entries_exits = exits.delta)
# bind dataframes
subwaydata_fil <- data.frame()
subwaydata_fil <- rbind(entries,exits)
subwaydata_fil <- as.data.frame(subwaydata_fil)
subwaydata_fil$entries_exits_rate[is.infinite(subwaydata_fil$entries_exits_rate)] <- 0
# plot it
ggplot(data=subwaydata_fil, aes(x=time,
y=entries_exits_rate,
group=type,
colour=type)) +
ggtitle("Total Entries and Exits vs. Time of Day") +
xlab("Time of Day") +
ylab("No. Entries & Exits")+
geom_smooth() +
facet_wrap(~ day_of_week)
# get patterns of stations ex. commuter station, residential station, commercial station
# might have rule
entries <- subwaydata_fil %>%
select(station, linename,date.time, time, day_of_week,entries.delta, entries_per_timediff) %>%
mutate(type = "entry")
library(dplyr)
entries <- subwaydata_fil %>%
select(station, linename,date.time, time, day_of_week,entries.delta, entries_per_timediff) %>%
mutate(type = "entry")
entries <- subwaydata_fil %>%
select(station, linename,date.time, time, day_of_week,entries.delta, entries_per_timediff) %>%
mutate(type = "entry")
entries <- dplyr::rename(entries, entries_exits_rate = entries_per_timediff)
entries <- dplyr::rename(entries, entries_exits = entries.delta)
daily_entries <- tapply(subwaydata$entries.delta, subwaydata$date, FUN=sum)
daily_exits <- tapply(subwaydata$num_exits,subwaydata$date,FUN=sum)
lexave_subwaydata <- subset(subwaydata_fil, station == "LEXINGTON AVE")
library(dplyr)
library(dplyr)
setwd("~/subway/gtfs_data/")
stop_times <- read.table("stop_times.txt",header=TRUE,
sep=",",fill=TRUE,quote = "",row.names = NULL,
stringsAsFactors = FALSE)
stops <- read.table("stops.txt", header=TRUE,
sep=",",fill=TRUE,quote = "",row.names = NULL,
stringsAsFactors = FALSE)
setwd("~/subway/gtfs_data/")
trips <- read.table("trips.txt",header=TRUE,
sep=",",fill=TRUE,quote = "",row.names = NULL,
stringsAsFactors = FALSE)
stop_times <- stop_times[1:5]
stop_times$stop_id = substr(stop_times$stop_id,0,3)
stop_times$arrival_time <- as.POSIXct(stop_times$arrival_time, format='%H:%M:%S')
stop_times$departure_time <- as.POSIXct(stop_times$departure_time, format='%H:%M:%S')
stops <- stops[c(1,3,5,6)] #Getting rid of NA columns and location type field
stops$stop_id= substr(stops$stop_id,0,3)
stops = stops[!duplicated(stops),]
stop_times_names <- inner_join(stop_times,stops)
trips <- trips[1:5]
trips <- inner_join(stop_times_names, trips)
View(trips)
trips <- arrange(trips, direction_id, route_id)
trips <- trips[!duplicated(trips),]
View(trips)
trips <- group_by(trips, route_id, direction_id) %>% mutate(travel_time = departure_time - lag(arrival_time))
trips[trips$stop_sequence == 1,]$travel_time = 0
View(trips)
trips <- arrange(trips, route_id, stop_sequence)
avg_trips <- trips[c(4,5,6,7,8,9,11,12,13)]
View(avg_trips)
avg <- group_by(trips, route_id, stop_sequence, stop_name, stop_id, stop_lon, stop_lat, trip_headsign, direction_id) %>% summarize(mean(travel_time))
avg <- arrange(avg, direction_id, route_id)
avg <- avg[complete.cases(avg),]
View(avg)
trips <- trips %>% arrange(trip_id)
stops_per_trip <- trips %>%
mutate(c=as.numeric(as.character(stop_sequence))) %>%
group_by(trip_id) %>%
summarise(total.count=n())
warnings()
View(trips)
View(trips)
trips <- left_join(trips, stops_per_trip)
View(trips)
View(stops_per_trip)
View(stops_per_trip)
trips <- trips %>% group_by(route_id) %>%
filter(total.count == max(total.count)) %>%
arrange(route_id,stop_sequence,total.count)
View(trips)
warnings()
trips <- trips[c(4,5,6,7,8,9,11,12,13,14)]
trips <- trips[!duplicated(trips),]
View(trips)
avg_time <- trips %>% group_by(route_id, stop_sequence, stop_id) %>% summarize(mean_duration = mean(travel_time, na.rm = TRUE))
trips <- left_join(trips, avg_time)
View(trips)
trips <- trips[c(6,2,1,3,4,5,8,11)]
View(trips)
View(trips)
trips <- trips[!duplicated(trips),]
trips <- arrange(trips, route_id, direction_id)
trips <- trips %>% filter(direction_id == 0) #Why are there more in the 0 direction than the 1 direction!?
View(trips)
zero<- "0"
trips$stop_sequence <- paste(zero,trips$stop_sequence,sep="")
trips$station_id <- paste("s",trips$route_id,trips$stop_sequence,sep="")
View(trips)
trips <- ungroup(trips) %>% arrange(stop_id)
n <- 2:length(trips$stop_id)
for (i in n){
if(trips$stop_id[i] == trips$stop_id[i-1] ){
trips$station_id[i] = trips$station_id[i-1]
}
}
View(trips)
setwd("~/subway/gtfs_data")
transfers <- read.table("transfers.txt",header=TRUE,
sep=",",fill=TRUE,quote = "",row.names = NULL,
stringsAsFactors = FALSE)
transfers <- transfers[c(1,2)]
View(transfers)
transfers <- transfers %>% filter(from_stop_id != to_stop_id)
View(trips)
transfers$all_stat = paste(transfers$from_stop_id, transfers$to_stop_id, sep = ",")
n <- 2:length(transfers$from_stop_id)
for (i in n){
if(transfers$from_stop_id[i] == transfers$from_stop_id[i-1]){
transfers$all_stat[i] <- paste(transfers$all_stat[i-1], transfers$to_stop_id[i], sep = ",")
transfers$all_stat[i-1] <- ""
}
}
View(transfers)
transfers <- transfers %>% filter(transfers$all_stat != "")
View(transfers)
strSort <- function(x)
sapply(lapply(strsplit(x, ","), sort), paste, collapse=",")
warnings()
transfers$all_stat<- lapply(transfers$all_stat, strSort)
View(transfers)
transfers$all_stat <- unlist(transfers$all_stat)
transfers <- arrange(transfers, as.factor(all_stat))
trips <- left_join(trips, transfers, by = c("stop_id" = "from_stop_id"))
trips <- arrange(trips, all_stat)
n <- 2:length(trips$all_stat)
for (i in n){
if(!is.na(trips$all_stat[i]) && trips$all_stat[i] == trips$all_stat[i-1]){
trips$station_id[i] = trips$station_id[i-1]
}
}
trips <- arrange(trips, route_id, stop_sequence)
trips <- arrange(trips, all_stat)
View(trips)
n <- 2:length(trips$all_stat)
for (i in n){
if(!is.na(trips$all_stat[i]) && trips$all_stat[i] == trips$all_stat[i-1]){
trips$station_id[i] = trips$station_id[i-1]
}
}
trips <- arrange(trips, route_id, stop_sequence)
trips <- trips[1:9] #Getting rid of extra stop_id stuff from transfers.
write.csv(trips, "station_ids_trips.csv")
setwd("..")
write.csv(trips, "station_ids_trips.csv")
warnings()
pwd
pwd()
getwd()
write.csv(trips, "station_ids_trips.csv")
